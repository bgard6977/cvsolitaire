{"config":{"output_file":null,"full_docs":false,"pub_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_name":"deque","crate_root":"/Users/bgardner/.cargo/registry/src/github.com-1ecc6299db9ec823/deque-0.3.2/src","external_crates":[{"name":"panic_unwind","num":11,"file_name":"/Users/bgardner/.cargo/registry/src/github.com-1ecc6299db9ec823/deque-0.3.2/src/lib.rs"},{"name":"unwind","num":8,"file_name":"/Users/bgardner/.cargo/registry/src/github.com-1ecc6299db9ec823/deque-0.3.2/src/lib.rs"},{"name":"std_unicode","num":5,"file_name":"/Users/bgardner/.cargo/registry/src/github.com-1ecc6299db9ec823/deque-0.3.2/src/lib.rs"},{"name":"core","num":2,"file_name":"/Users/bgardner/.cargo/registry/src/github.com-1ecc6299db9ec823/deque-0.3.2/src/lib.rs"},{"name":"alloc_jemalloc","num":10,"file_name":"/Users/bgardner/.cargo/registry/src/github.com-1ecc6299db9ec823/deque-0.3.2/src/lib.rs"},{"name":"libc","num":7,"file_name":"/Users/bgardner/.cargo/registry/src/github.com-1ecc6299db9ec823/deque-0.3.2/src/lib.rs"},{"name":"alloc","num":4,"file_name":"/Users/bgardner/.cargo/registry/src/github.com-1ecc6299db9ec823/deque-0.3.2/src/lib.rs"},{"name":"std","num":1,"file_name":"/Users/bgardner/.cargo/registry/src/github.com-1ecc6299db9ec823/deque-0.3.2/src/lib.rs"},{"name":"compiler_builtins","num":9,"file_name":"/Users/bgardner/.cargo/registry/src/github.com-1ecc6299db9ec823/deque-0.3.2/src/lib.rs"},{"name":"alloc_system","num":6,"file_name":"/Users/bgardner/.cargo/registry/src/github.com-1ecc6299db9ec823/deque-0.3.2/src/lib.rs"},{"name":"rand","num":3,"file_name":"/Users/bgardner/.cargo/registry/src/github.com-1ecc6299db9ec823/deque-0.3.2/src/lib.rs"}],"span":{"file_name":[47,85,115,101,114,115,47,98,103,97,114,100,110,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,113,117,101,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":426,"byte_end":11146,"line_start":10,"line_end":365,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,85,115,101,114,115,47,98,103,97,114,100,110,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,113,117,101,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1450,"byte_end":1451,"line_start":40,"line_end":40,"column_start":23,"column_end":24},"name":"*","value":"Abort, Empty, Data"}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,98,103,97,114,100,110,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,113,117,101,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":426,"byte_end":11146,"line_start":10,"line_end":365,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/bgardner/.cargo/registry/src/github.com-1ecc6299db9ec823/deque-0.3.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":13},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":59},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56}],"decl_id":null,"docs":" A (mostly) lock-free concurrent work-stealing deque","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21},"span":{"file_name":[47,85,115,101,114,115,47,98,103,97,114,100,110,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,113,117,101,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2087,"byte_end":2093,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"name":"Worker","qualname":"::Worker","value":"Worker {  }","parent":null,"children":[{"krate":0,"index":2147483661},{"krate":0,"index":2147483662}],"decl_id":null,"docs":" Worker half of the work-stealing deque. This worker has exclusive access to\n one side of the deque, and uses `push` and `pop` method to manipulate it.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22},"span":{"file_name":[47,85,115,101,114,115,47,98,103,97,114,100,110,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,113,117,101,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2562,"byte_end":2569,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"Stealer","qualname":"::Stealer","value":"Stealer {  }","parent":null,"children":[{"krate":0,"index":2147483664}],"decl_id":null,"docs":" The stealing half of the work-stealing deque. Stealers have access to the\n opposite end of the deque from the worker, and they only have access to the\n `steal` method.\n","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147483745},"span":{"file_name":[47,85,115,101,114,115,47,98,103,97,114,100,110,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,113,117,101,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2915,"byte_end":2920,"line_start":91,"line_end":91,"column_start":5,"column_end":10},"name":"Empty","qualname":"::Stolen::Empty","value":"Stolen::Empty","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" The deque was empty at the time of stealing\n","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147483746},"span":{"file_name":[47,85,115,101,114,115,47,98,103,97,114,100,110,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,113,117,101,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3021,"byte_end":3026,"line_start":94,"line_end":94,"column_start":5,"column_end":10},"name":"Abort","qualname":"::Stolen::Abort","value":"Stolen::Abort","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" The stealer lost the race for stealing data, and a retry may return more\n data.\n","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147483747},"span":{"file_name":[47,85,115,101,114,115,47,98,103,97,114,100,110,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,113,117,101,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3087,"byte_end":3091,"line_start":96,"line_end":96,"column_start":5,"column_end":9},"name":"Data","qualname":"::Stolen::Data","value":"Stolen::Data(T)","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" The stealer has successfully stolen some data.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":58},"span":{"file_name":[47,85,115,101,114,115,47,98,103,97,114,100,110,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,113,117,101,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2847,"byte_end":2853,"line_start":89,"line_end":89,"column_start":10,"column_end":16},"name":"Stolen","qualname":"::Stolen","value":"Stolen::{Empty, Abort, Data}","parent":null,"children":[{"krate":0,"index":2147483745},{"krate":0,"index":2147483746},{"krate":0,"index":2147483747}],"decl_id":null,"docs":" When stealing some data, this is an enumeration of the possible outcomes.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":26},"span":{"file_name":[47,85,115,101,114,115,47,98,103,97,114,100,110,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,113,117,101,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4416,"byte_end":4419,"line_start":126,"line_end":126,"column_start":8,"column_end":11},"name":"new","qualname":"::new","value":"fn <T> () -> (Worker<T>, Stealer<T>)","parent":null,"children":[],"decl_id":null,"docs":" Allocates a new work-stealing deque.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":[47,85,115,101,114,115,47,98,103,97,114,100,110,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,113,117,101,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4712,"byte_end":4716,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"push","qualname":"<Worker<T>>::push","value":"fn (&self, t: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":[47,85,115,101,114,115,47,98,103,97,114,100,110,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,113,117,101,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4882,"byte_end":4885,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"pop","qualname":"<Worker<T>>::pop","value":"fn (&self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":[47,85,115,101,114,115,47,98,103,97,114,100,110,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,113,117,101,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5067,"byte_end":5072,"line_start":150,"line_end":150,"column_start":12,"column_end":17},"name":"steal","qualname":"<Stealer<T>>::steal","value":"fn (&self) -> Stolen<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,98,103,97,114,100,110,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,113,117,101,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2634,"byte_end":2641,"line_start":81,"line_end":81,"column_start":25,"column_end":32},"kind":"Impl","from":{"krate":0,"index":22},"to":{"krate":2,"index":1134}},{"span":{"file_name":[47,85,115,101,114,115,47,98,103,97,114,100,110,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,113,117,101,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4634,"byte_end":4640,"line_start":136,"line_end":136,"column_start":15,"column_end":21},"kind":"Impl","from":{"krate":0,"index":21},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,98,103,97,114,100,110,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,113,117,101,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4967,"byte_end":4974,"line_start":148,"line_end":148,"column_start":15,"column_end":22},"kind":"Impl","from":{"krate":0,"index":22},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,98,103,97,114,100,110,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,113,117,101,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5156,"byte_end":5161,"line_start":155,"line_end":155,"column_start":15,"column_end":20},"kind":"Impl","from":{"krate":0,"index":20},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,98,103,97,114,100,110,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,113,117,101,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7965,"byte_end":7970,"line_start":249,"line_end":249,"column_start":24,"column_end":29},"kind":"Impl","from":{"krate":0,"index":20},"to":{"krate":2,"index":886}},{"span":{"file_name":[47,85,115,101,114,115,47,98,103,97,114,100,110,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,113,117,101,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8807,"byte_end":8813,"line_start":284,"line_end":284,"column_start":15,"column_end":21},"kind":"Impl","from":{"krate":0,"index":25},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,98,103,97,114,100,110,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,113,117,101,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10233,"byte_end":10239,"line_start":333,"line_end":333,"column_start":24,"column_end":30},"kind":"Impl","from":{"krate":0,"index":25},"to":{"krate":2,"index":886}},{"span":{"file_name":[47,85,115,101,114,115,47,98,103,97,114,100,110,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,113,117,101,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10424,"byte_end":10429,"line_start":340,"line_end":340,"column_start":30,"column_end":35},"kind":"Impl","from":{"krate":0,"index":20},"to":{"krate":2,"index":3332}},{"span":{"file_name":[47,85,115,101,114,115,47,98,103,97,114,100,110,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,113,117,101,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10712,"byte_end":10718,"line_start":350,"line_end":350,"column_start":30,"column_end":36},"kind":"Impl","from":{"krate":0,"index":21},"to":{"krate":2,"index":3332}},{"span":{"file_name":[47,85,115,101,114,115,47,98,103,97,114,100,110,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,113,117,101,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10965,"byte_end":10972,"line_start":359,"line_end":359,"column_start":30,"column_end":37},"kind":"Impl","from":{"krate":0,"index":22},"to":{"krate":2,"index":3332}}]}
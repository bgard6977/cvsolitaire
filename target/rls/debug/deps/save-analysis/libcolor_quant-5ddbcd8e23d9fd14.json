{"config":{"output_file":null,"full_docs":false,"pub_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_name":"color_quant","crate_root":"/Users/bgardner/.cargo/registry/src/github.com-1ecc6299db9ec823/color_quant-1.0.0/src","external_crates":[{"name":"panic_unwind","num":11,"file_name":"/Users/bgardner/.cargo/registry/src/github.com-1ecc6299db9ec823/color_quant-1.0.0/src/lib.rs"},{"name":"unwind","num":8,"file_name":"/Users/bgardner/.cargo/registry/src/github.com-1ecc6299db9ec823/color_quant-1.0.0/src/lib.rs"},{"name":"std_unicode","num":5,"file_name":"/Users/bgardner/.cargo/registry/src/github.com-1ecc6299db9ec823/color_quant-1.0.0/src/lib.rs"},{"name":"core","num":2,"file_name":"/Users/bgardner/.cargo/registry/src/github.com-1ecc6299db9ec823/color_quant-1.0.0/src/lib.rs"},{"name":"alloc_jemalloc","num":10,"file_name":"/Users/bgardner/.cargo/registry/src/github.com-1ecc6299db9ec823/color_quant-1.0.0/src/lib.rs"},{"name":"libc","num":7,"file_name":"/Users/bgardner/.cargo/registry/src/github.com-1ecc6299db9ec823/color_quant-1.0.0/src/lib.rs"},{"name":"alloc","num":4,"file_name":"/Users/bgardner/.cargo/registry/src/github.com-1ecc6299db9ec823/color_quant-1.0.0/src/lib.rs"},{"name":"std","num":1,"file_name":"/Users/bgardner/.cargo/registry/src/github.com-1ecc6299db9ec823/color_quant-1.0.0/src/lib.rs"},{"name":"compiler_builtins","num":9,"file_name":"/Users/bgardner/.cargo/registry/src/github.com-1ecc6299db9ec823/color_quant-1.0.0/src/lib.rs"},{"name":"alloc_system","num":6,"file_name":"/Users/bgardner/.cargo/registry/src/github.com-1ecc6299db9ec823/color_quant-1.0.0/src/lib.rs"},{"name":"rand","num":3,"file_name":"/Users/bgardner/.cargo/registry/src/github.com-1ecc6299db9ec823/color_quant-1.0.0/src/lib.rs"}],"span":{"file_name":[47,85,115,101,114,115,47,98,103,97,114,100,110,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,108,111,114,95,113,117,97,110,116,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2445,"byte_end":16149,"line_start":52,"line_end":440,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,98,103,97,114,100,110,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,108,111,114,95,113,117,97,110,116,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2445,"byte_end":16149,"line_start":52,"line_end":440,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/bgardner/.cargo/registry/src/github.com-1ecc6299db9ec823/color_quant-1.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":34},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18}],"decl_id":null,"docs":" # Color quantization library\n This library provides a color quantizer based on the [NEUQUANT](http://members.ozemail.com.au/~dekker/NEUQUANT.HTML)\n quantization algorithm by Anthony Dekker.\n ### Usage\n ```\n let data = vec![0; 40];\n let nq = color_quant::NeuQuant::new(10, 256, &data);\n let indixes: Vec<u8> = data.chunks(4).map(|pix| nq.index_of(pix) as u8).collect();\n let color_map = nq.color_map_rgba();\n ```\n \n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17},"span":{"file_name":[47,85,115,101,114,115,47,98,103,97,114,100,110,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,108,111,114,95,113,117,97,110,116,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3729,"byte_end":3737,"line_start":103,"line_end":103,"column_start":12,"column_end":20},"name":"NeuQuant","qualname":"::NeuQuant","value":"NeuQuant {  }","parent":null,"children":[{"krate":0,"index":2147483658},{"krate":0,"index":2147483659},{"krate":0,"index":2147483660},{"krate":0,"index":2147483661},{"krate":0,"index":2147483662},{"krate":0,"index":2147483663},{"krate":0,"index":2147483664}],"decl_id":null,"docs":" Neural network based color quantizer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":[47,85,115,101,114,115,47,98,103,97,114,100,110,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,108,111,114,95,113,117,97,110,116,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4410,"byte_end":4413,"line_start":121,"line_end":121,"column_start":12,"column_end":15},"name":"new","qualname":"<NeuQuant>::new","value":"fn (samplefac: i32, colors: usize, pixels: &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":[47,85,115,101,114,115,47,98,103,97,114,100,110,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,111,108,111,114,95,113,117,97,110,116,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5031,"byte_end":5035,"line_start":139,"line_end":139,"column_start":12,"column_end":16},"name":"init","qualname":"<NeuQuant>::init","value":"fn (&mut self, pixels: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name"